
<h3 class="text-success mt-5 mb-5">@OperationTitle</h3>
<div class="container d-flex justify-content-center align-items-center">
    <div>

        @if (errorText != string.Empty)
        {
            <span class="text-danger">@errorText</span>
            <br />
        }
        <div class="form-row">
            <div class="form-group">
                <label for="inputEmail4">Name</label>
                <InputText @bind-Value=envanter.Name class="form-control" placeholder="Name" />
                <span> </span>
            </div>
            <div class="form-group">
                <label for="inputPassword4">ENVCode</label>
                <InputText @bind-Value=envanter.ENVCode class="form-control" placeholder="Envanter Code" />
            </div>
        </div>
        <div class="form-group">
            <label for="inputAddress">StockQuantity</label>
            <InputNumber @bind-Value=envanter.StockQuantity class="form-control" id="inputAddress" />
        </div>
        <div class="form-group mb-5">
            <label>Choose Envanter Brand</label>

            @if (brands != null)
            {
                <select class="form-select" @bind="envanter.BrandId" aria-label="Default select example">
                    <option>Null</option>
                    @foreach (var brand in brands)
                    {
                        <option value="@brand.Id">@brand.BrandName</option>
                    }
                </select>
            }
        </div>
        <button type="submit" class="px-5 btn btn-outline-success">Add</button>
        <br />


    </div>
</div>
@code {

    [Inject]
    ICategoryService categoryService{ get; set; }

    [Parameter]
    public string OperationTitle = "";

    [Parameter]
    public string errorText { get; set; }

    List<GetCategoryViewModel> categories;

    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.GetCategories();
    }
}
